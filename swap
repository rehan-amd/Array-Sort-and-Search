enum DataType {
  Int = 1 , Char = 2 , Float = 3 , String= 4
};

void Swap( void* ptr1, void* ptr2 )
{
  DataType type;

  if ( (ptr1 == (int*)ptr1) && (ptr2 == (int*)ptr2) )
      type = Int;
  else if ( (ptr1 == (float*)ptr1) && (ptr2 == (float*)ptr2) )
      type = Float;
  else if ( (ptr1 == (char*)ptr1) && (ptr2 == (char*)ptr2) )
      type = Char;
  else if ( (ptr1 == (string*)ptr1) && (ptr2 == (string*)ptr2) )
      type = String;
  else
  {
    cout << "Invalid Data Type\n\n";
    return;
  }

  switch(type)
  {
    case Int:
    {
      int* p1 = (int*)ptr1;
      int* p2 = (int*)ptr2;
      int temp;

      temp = *p1;
      *p1 = *p2;
      *p2 = temp;

      break;
    }
    case Char:
    {
      char* p1 = (char*)ptr1;
      char* p2 = (char*)ptr2;
      char temp;

      temp = *p1;
      *p1 = *p2;
      *p2 = temp;

      break;
    }
    case Float:
    {
      float* p1 = (float*)ptr1;
      float* p2 = (float*)ptr2;
      float temp;

      temp = *p1;
      *p1 = *p2;
      *p2 = temp;

      break;
    }
    case String:
    {
      string* p1 = (string*)ptr1;
      string* p2 = (string*)ptr2;
      string temp;

      temp = *p1;
      *p1 = *p2;
      *p2 = temp;

      break;
    }


    default:
        cout << "\nInvalid Type!\n\n";
  }
}